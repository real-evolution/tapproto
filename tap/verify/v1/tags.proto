syntax = "proto3";

package tap.verify.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

// tag's management service
service TagsService {
  // Lists tags
  rpc ListTags(ListTagsRequest) returns (ListTagsResponse);

  // Gets a tag
  rpc GetTag(GetTagRequest) returns (GetTagResponse);

  // Create a tag
  rpc CreateTag(CreateTagRequest) returns (CreateTagResponse);

  // Updates a tag
  rpc UpdateTag(UpdateTagRequest) returns (UpdateTagResponse);

  // Deletes a tag
  rpc DeleteTag(DeleteTagRequest) returns (DeleteTagResponse);
}

// Request message for `ListTags`
message ListTagsRequest {
  // Filter by code
  optional string code = 1;

  // Filter by priority
  optional int32 priority = 2;

  // Creation timestamp after which to query.
  optional google.protobuf.Timestamp before_timestamp = 3;

  // The maximum number of products to return
  optional int32 page_size = 4;
}

// Response message for `ListTags`
message ListTagsResponse {
  // The tags.
  repeated Tag tags = 1;
}

// Request message for `GetTag`
message GetTagRequest {
  // The code of the tag.
  TagCode code = 1 [(buf.validate.field).required = true];
}

// Response message for `GetTag`
message GetTagResponse {
  // The tag.
  Tag tag = 1;
}

// Request message for `CreateTag`
message CreateTagRequest {
  // The tag code.
  TagCode code = 1 [(buf.validate.field).required = true];

  // The priority of the tag.
  int32 priority = 2;
}

// Response message for `CreateTag`
message CreateTagResponse {
  // The created tag.
  Tag tag = 1;
}

// Request message for `UpdateTag`
message UpdateTagRequest {
  // The old code.
  TagCode old_code = 1 [(buf.validate.field).required = true];

  // The new code
  optional TagCode new_code = 2;

  // The new priority
  optional int32 new_priority = 3;
}

// Response message for `UpdateTag`
message UpdateTagResponse {
  // The updated tag.
  Tag tag = 1;
}

// Request message for `DeleteTag`
message DeleteTagRequest {
  // The tag code.
  TagCode code = 1 [(buf.validate.field).required = true];
}

// Response message for `DeleteTag`
message DeleteTagResponse {}

// A message representing a tag code.
message TagCode {
  // The code of the tag.
  string value = 1 [(buf.validate.field).required = true];
}

// A message representing a tag.
message Tag {
  // The code of the tag.
  TagCode code = 1;

  // The priority of the tag.
  int32 priority = 2;

  // The creation time of the tag.
  google.protobuf.Timestamp create_time = 3;

  // The last update time of the tag.
  google.protobuf.Timestamp update_time = 4;
}
