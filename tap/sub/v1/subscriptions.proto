syntax = "proto3";

package tap.sub.v1;

import "buf/validate/validate.proto";
import "google/protobuf/timestamp.proto";

// Subscribers' subscriptions management service.
service SubscriptionsService {
  // Lists subscriptions.
  rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse);

  // Gets a subscription.
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse);

  // Subscribes to a provider.
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);

  // Unsubscribes from a provider.
  rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
}

// Request message for `ListSubscriptions`.
message ListSubscriptionsRequest {
  // The ID of the provider to list subscriptions for.
  optional string provider_id = 1 [(buf.validate.field).string.uuid = true];

  // Filter by subscriber.
  optional string subscriber_id = 2 [(buf.validate.field).string.uuid = true];

  // Filter by site.
  optional string site_id = 3 [(buf.validate.field).string.uuid = true];

  // Creation timestamp after which to query.
  optional google.protobuf.Timestamp before_timestamp = 4;

  // The maximum number of subscriptions to return.
  optional int32 page_size = 5;
}

// Response message for `ListSubscriptions`.
message ListSubscriptionsResponse {
  // The subscriptions.
  repeated Subscription subscriptions = 1;
}

// Request message for `GetSubscription`.
message GetSubscriptionRequest {
  // The subscriber's phone number.
  int64 phone = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gte = 0000000000010000,
    (buf.validate.field).int64.lte = 9999999999999999
  ];
}

// Response message for `GetSubscription`.
message GetSubscriptionResponse {
  // The subscription.
  Subscription subscription = 1;
}

// Request message for `Subscribe`.
message SubscribeRequest {
  // The subscriber's phone number.
  int64 phone = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gte = 0000000000010000,
    (buf.validate.field).int64.lte = 9999999999999999
  ];

  // The ID of the site to subscribe to.
  string site_id = 2 [(buf.validate.field).string.uuid = true];
}

// Response message for `Subscribe`.
message SubscribeResponse {}

// Request message for `Unsubscribe`.
message UnsubscribeRequest {
  // The subscriber's phone number.
  int64 phone = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).int64.gte = 0000000000010000,
    (buf.validate.field).int64.lte = 9999999999999999
  ];
}

// Response message for `Unsubscribe`.
message UnsubscribeResponse {}

// A message to represent a subscription.
message Subscription {
  // The subscriber's phone number associated with .
  int64 phone = 1;

  // The identifier of the subscriber who made the subscription.
  string subscriber_id = 2;

  // The identifier of the site where the subscription was on.
  string site_id = 3;

  // The creation timestamp
  google.protobuf.Timestamp create_time = 4;

  // The last update timestamp
  google.protobuf.Timestamp update_time = 5;
}
