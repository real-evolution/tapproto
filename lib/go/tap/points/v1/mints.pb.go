// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: tap/points/v1/mints.proto

package pointsv1

import (
	v1 "github.com/real-evolution/tapproto/lib/go/tap/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for `ListMints`
type ListMintsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by account
	AccountId *AccountID `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3,oneof" json:"account_id,omitempty"`
	// Filter by token.
	TokenCode *TokenCode `protobuf:"bytes,2,opt,name=token_code,json=tokenCode,proto3,oneof" json:"token_code,omitempty"`
	// Filter b minted amount upper bound.
	AmountLessThan *v1.Decimal `protobuf:"bytes,3,opt,name=amount_less_than,json=amountLessThan,proto3,oneof" json:"amount_less_than,omitempty"`
	// Filter b minted amount upper bound.
	AmountGreaterThan *v1.Decimal `protobuf:"bytes,4,opt,name=amount_greater_than,json=amountGreaterThan,proto3,oneof" json:"amount_greater_than,omitempty"`
	// Pagination parameters.
	Page *v1.Page `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListMintsRequest) Reset() {
	*x = ListMintsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMintsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMintsRequest) ProtoMessage() {}

func (x *ListMintsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMintsRequest.ProtoReflect.Descriptor instead.
func (*ListMintsRequest) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{0}
}

func (x *ListMintsRequest) GetAccountId() *AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *ListMintsRequest) GetTokenCode() *TokenCode {
	if x != nil {
		return x.TokenCode
	}
	return nil
}

func (x *ListMintsRequest) GetAmountLessThan() *v1.Decimal {
	if x != nil {
		return x.AmountLessThan
	}
	return nil
}

func (x *ListMintsRequest) GetAmountGreaterThan() *v1.Decimal {
	if x != nil {
		return x.AmountGreaterThan
	}
	return nil
}

func (x *ListMintsRequest) GetPage() *v1.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

// Response message for `ListMints`
type ListMintsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The mint transactions.
	Items []*Mint `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	// The next page cursor.
	NextCursor []byte `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3,oneof" json:"next_cursor,omitempty"`
}

func (x *ListMintsResponse) Reset() {
	*x = ListMintsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMintsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMintsResponse) ProtoMessage() {}

func (x *ListMintsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMintsResponse.ProtoReflect.Descriptor instead.
func (*ListMintsResponse) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{1}
}

func (x *ListMintsResponse) GetItems() []*Mint {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListMintsResponse) GetNextCursor() []byte {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

// Request message for `GetMint`
type GetMintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the mint transaction to get.
	Id *MintID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMintRequest) Reset() {
	*x = GetMintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMintRequest) ProtoMessage() {}

func (x *GetMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMintRequest.ProtoReflect.Descriptor instead.
func (*GetMintRequest) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{2}
}

func (x *GetMintRequest) GetId() *MintID {
	if x != nil {
		return x.Id
	}
	return nil
}

// Request message for `GetMint`
type GetMintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The mint transaction.
	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *GetMintResponse) Reset() {
	*x = GetMintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMintResponse) ProtoMessage() {}

func (x *GetMintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMintResponse.ProtoReflect.Descriptor instead.
func (*GetMintResponse) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{3}
}

func (x *GetMintResponse) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

// Request message for `Mint`
type MintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the account to mint into.
	AccountId *AccountID `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// The number of token points to mint.
	Amount *v1.Decimal `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Optional note.
	Note *string `protobuf:"bytes,3,opt,name=note,proto3,oneof" json:"note,omitempty"`
}

func (x *MintRequest) Reset() {
	*x = MintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintRequest) ProtoMessage() {}

func (x *MintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintRequest.ProtoReflect.Descriptor instead.
func (*MintRequest) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{4}
}

func (x *MintRequest) GetAccountId() *AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *MintRequest) GetAmount() *v1.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *MintRequest) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

// Response message for `Mint`
type MintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created mint transaction.
	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *MintResponse) Reset() {
	*x = MintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintResponse) ProtoMessage() {}

func (x *MintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintResponse.ProtoReflect.Descriptor instead.
func (*MintResponse) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{5}
}

func (x *MintResponse) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

// A message to represent a mint identifier.
type MintID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *MintID) Reset() {
	*x = MintID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintID) ProtoMessage() {}

func (x *MintID) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintID.ProtoReflect.Descriptor instead.
func (*MintID) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{6}
}

func (x *MintID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// A message to represent a token mint.
type Mint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The mint identifier.
	Id *MintID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The number of token points that were minted.
	Amount *v1.Decimal `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// The identifier of the account that was minted into.
	AccountId *AccountID `protobuf:"bytes,3,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// Optional notes.
	Note *string `protobuf:"bytes,4,opt,name=note,proto3,oneof" json:"note,omitempty"`
	// The timestamp at which the mint was minted.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Mint) Reset() {
	*x = Mint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_points_v1_mints_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mint) ProtoMessage() {}

func (x *Mint) ProtoReflect() protoreflect.Message {
	mi := &file_tap_points_v1_mints_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mint.ProtoReflect.Descriptor instead.
func (*Mint) Descriptor() ([]byte, []int) {
	return file_tap_points_v1_mints_proto_rawDescGZIP(), []int{7}
}

func (x *Mint) GetId() *MintID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Mint) GetAmount() *v1.Decimal {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Mint) GetAccountId() *AccountID {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *Mint) GetNote() string {
	if x != nil && x.Note != nil {
		return *x.Note
	}
	return ""
}

func (x *Mint) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

var File_tap_points_v1_mints_proto protoreflect.FileDescriptor

var file_tap_points_v1_mints_proto_rawDesc = []byte{
	0x0a, 0x19, 0x74, 0x61, 0x70, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x61, 0x70,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x74, 0x61, 0x70,
	0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x61, 0x70, 0x2f, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x61, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x74, 0x61, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x93, 0x03, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x44, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x3c, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x48, 0x01, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x48, 0x02, 0x52, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x54, 0x68, 0x61, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a, 0x13, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x48, 0x03, 0x52, 0x11, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x47, 0x72, 0x65, 0x61, 0x74, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x42, 0x16,
	0x0a, 0x14, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x67, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x22, 0x74, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x37, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x44, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x88,
	0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x0c, 0x4d,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6d,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04,
	0x6d, 0x69, 0x6e, 0x74, 0x22, 0x1e, 0x0a, 0x06, 0x4d, 0x69, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xf4, 0x01, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x44, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x32, 0xe9, 0x01, 0x0a, 0x0c,
	0x4d, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1a,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xb7, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0a, 0x4d,
	0x69, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x61, 0x6c, 0x2d, 0x65, 0x76, 0x6f,
	0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x61, 0x70, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x54, 0x50, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x61, 0x70, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x54, 0x61, 0x70, 0x5c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x54, 0x61, 0x70, 0x5c, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0f, 0x54, 0x61, 0x70, 0x3a, 0x3a, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tap_points_v1_mints_proto_rawDescOnce sync.Once
	file_tap_points_v1_mints_proto_rawDescData = file_tap_points_v1_mints_proto_rawDesc
)

func file_tap_points_v1_mints_proto_rawDescGZIP() []byte {
	file_tap_points_v1_mints_proto_rawDescOnce.Do(func() {
		file_tap_points_v1_mints_proto_rawDescData = protoimpl.X.CompressGZIP(file_tap_points_v1_mints_proto_rawDescData)
	})
	return file_tap_points_v1_mints_proto_rawDescData
}

var file_tap_points_v1_mints_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_tap_points_v1_mints_proto_goTypes = []interface{}{
	(*ListMintsRequest)(nil),      // 0: tap.points.v1.ListMintsRequest
	(*ListMintsResponse)(nil),     // 1: tap.points.v1.ListMintsResponse
	(*GetMintRequest)(nil),        // 2: tap.points.v1.GetMintRequest
	(*GetMintResponse)(nil),       // 3: tap.points.v1.GetMintResponse
	(*MintRequest)(nil),           // 4: tap.points.v1.MintRequest
	(*MintResponse)(nil),          // 5: tap.points.v1.MintResponse
	(*MintID)(nil),                // 6: tap.points.v1.MintID
	(*Mint)(nil),                  // 7: tap.points.v1.Mint
	(*AccountID)(nil),             // 8: tap.points.v1.AccountID
	(*TokenCode)(nil),             // 9: tap.points.v1.TokenCode
	(*v1.Decimal)(nil),            // 10: tap.types.v1.Decimal
	(*v1.Page)(nil),               // 11: tap.types.v1.Page
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_tap_points_v1_mints_proto_depIdxs = []int32{
	8,  // 0: tap.points.v1.ListMintsRequest.account_id:type_name -> tap.points.v1.AccountID
	9,  // 1: tap.points.v1.ListMintsRequest.token_code:type_name -> tap.points.v1.TokenCode
	10, // 2: tap.points.v1.ListMintsRequest.amount_less_than:type_name -> tap.types.v1.Decimal
	10, // 3: tap.points.v1.ListMintsRequest.amount_greater_than:type_name -> tap.types.v1.Decimal
	11, // 4: tap.points.v1.ListMintsRequest.page:type_name -> tap.types.v1.Page
	7,  // 5: tap.points.v1.ListMintsResponse.items:type_name -> tap.points.v1.Mint
	6,  // 6: tap.points.v1.GetMintRequest.id:type_name -> tap.points.v1.MintID
	7,  // 7: tap.points.v1.GetMintResponse.mint:type_name -> tap.points.v1.Mint
	8,  // 8: tap.points.v1.MintRequest.account_id:type_name -> tap.points.v1.AccountID
	10, // 9: tap.points.v1.MintRequest.amount:type_name -> tap.types.v1.Decimal
	7,  // 10: tap.points.v1.MintResponse.mint:type_name -> tap.points.v1.Mint
	6,  // 11: tap.points.v1.Mint.id:type_name -> tap.points.v1.MintID
	10, // 12: tap.points.v1.Mint.amount:type_name -> tap.types.v1.Decimal
	8,  // 13: tap.points.v1.Mint.account_id:type_name -> tap.points.v1.AccountID
	12, // 14: tap.points.v1.Mint.create_time:type_name -> google.protobuf.Timestamp
	0,  // 15: tap.points.v1.MintsService.ListMints:input_type -> tap.points.v1.ListMintsRequest
	2,  // 16: tap.points.v1.MintsService.GetMint:input_type -> tap.points.v1.GetMintRequest
	4,  // 17: tap.points.v1.MintsService.Mint:input_type -> tap.points.v1.MintRequest
	1,  // 18: tap.points.v1.MintsService.ListMints:output_type -> tap.points.v1.ListMintsResponse
	3,  // 19: tap.points.v1.MintsService.GetMint:output_type -> tap.points.v1.GetMintResponse
	5,  // 20: tap.points.v1.MintsService.Mint:output_type -> tap.points.v1.MintResponse
	18, // [18:21] is the sub-list for method output_type
	15, // [15:18] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_tap_points_v1_mints_proto_init() }
func file_tap_points_v1_mints_proto_init() {
	if File_tap_points_v1_mints_proto != nil {
		return
	}
	file_tap_points_v1_accounts_proto_init()
	file_tap_points_v1_tokens_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tap_points_v1_mints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMintsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMintsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_points_v1_mints_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tap_points_v1_mints_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_tap_points_v1_mints_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_tap_points_v1_mints_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_tap_points_v1_mints_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tap_points_v1_mints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tap_points_v1_mints_proto_goTypes,
		DependencyIndexes: file_tap_points_v1_mints_proto_depIdxs,
		MessageInfos:      file_tap_points_v1_mints_proto_msgTypes,
	}.Build()
	File_tap_points_v1_mints_proto = out.File
	file_tap_points_v1_mints_proto_rawDesc = nil
	file_tap_points_v1_mints_proto_goTypes = nil
	file_tap_points_v1_mints_proto_depIdxs = nil
}
