// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: tap/verify/v1/verifiers.proto

package verifyv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for `CreateVerifier`
type CreateVerifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifier identifier
	Id *VerifierID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The verifier display name
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *CreateVerifierRequest) Reset() {
	*x = CreateVerifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerifierRequest) ProtoMessage() {}

func (x *CreateVerifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerifierRequest.ProtoReflect.Descriptor instead.
func (*CreateVerifierRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{0}
}

func (x *CreateVerifierRequest) GetId() *VerifierID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CreateVerifierRequest) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// Response message for `CreateVerifier`
type CreateVerifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verifier *Verifier `protobuf:"bytes,1,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (x *CreateVerifierResponse) Reset() {
	*x = CreateVerifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVerifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVerifierResponse) ProtoMessage() {}

func (x *CreateVerifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVerifierResponse.ProtoReflect.Descriptor instead.
func (*CreateVerifierResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVerifierResponse) GetVerifier() *Verifier {
	if x != nil {
		return x.Verifier
	}
	return nil
}

// Request message for `ListVerifiers`
type ListVerifiersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter by display name
	DisplayName *string `protobuf:"bytes,1,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
	// Creation timestamp after which to query.
	BeforeTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before_timestamp,json=beforeTimestamp,proto3,oneof" json:"before_timestamp,omitempty"`
	// The maximum number of products to return
	PageSize *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
}

func (x *ListVerifiersRequest) Reset() {
	*x = ListVerifiersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifiersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifiersRequest) ProtoMessage() {}

func (x *ListVerifiersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifiersRequest.ProtoReflect.Descriptor instead.
func (*ListVerifiersRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{2}
}

func (x *ListVerifiersRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *ListVerifiersRequest) GetBeforeTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.BeforeTimestamp
	}
	return nil
}

func (x *ListVerifiersRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// Request message for `ListVerifiers`
type ListVerifiersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifiers
	Verifiers []*Verifier `protobuf:"bytes,1,rep,name=verifiers,proto3" json:"verifiers,omitempty"`
}

func (x *ListVerifiersResponse) Reset() {
	*x = ListVerifiersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifiersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifiersResponse) ProtoMessage() {}

func (x *ListVerifiersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifiersResponse.ProtoReflect.Descriptor instead.
func (*ListVerifiersResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{3}
}

func (x *ListVerifiersResponse) GetVerifiers() []*Verifier {
	if x != nil {
		return x.Verifiers
	}
	return nil
}

// Request message for `GetVerifier`
type GetVerifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Id of the verifier to get
	Id *VerifierID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetVerifierRequest) Reset() {
	*x = GetVerifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifierRequest) ProtoMessage() {}

func (x *GetVerifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifierRequest.ProtoReflect.Descriptor instead.
func (*GetVerifierRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{4}
}

func (x *GetVerifierRequest) GetId() *VerifierID {
	if x != nil {
		return x.Id
	}
	return nil
}

// Response message for `GetVerifier`
type GetVerifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifier
	Verifier *Verifier `protobuf:"bytes,1,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (x *GetVerifierResponse) Reset() {
	*x = GetVerifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVerifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVerifierResponse) ProtoMessage() {}

func (x *GetVerifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVerifierResponse.ProtoReflect.Descriptor instead.
func (*GetVerifierResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{5}
}

func (x *GetVerifierResponse) GetVerifier() *Verifier {
	if x != nil {
		return x.Verifier
	}
	return nil
}

// Request message for `UpdateVerifier`
type UpdateVerifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the verifier to update
	Id *VerifierID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The display name
	DisplayName *string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3,oneof" json:"display_name,omitempty"`
}

func (x *UpdateVerifierRequest) Reset() {
	*x = UpdateVerifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerifierRequest) ProtoMessage() {}

func (x *UpdateVerifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerifierRequest.ProtoReflect.Descriptor instead.
func (*UpdateVerifierRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateVerifierRequest) GetId() *VerifierID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateVerifierRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

// Response message for `UpdateVerifier`
type UpdateVerifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifier
	Verifier *Verifier `protobuf:"bytes,1,opt,name=verifier,proto3" json:"verifier,omitempty"`
}

func (x *UpdateVerifierResponse) Reset() {
	*x = UpdateVerifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVerifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVerifierResponse) ProtoMessage() {}

func (x *UpdateVerifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVerifierResponse.ProtoReflect.Descriptor instead.
func (*UpdateVerifierResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVerifierResponse) GetVerifier() *Verifier {
	if x != nil {
		return x.Verifier
	}
	return nil
}

// Request message for `DeleteVerifier`
type DeleteVerifierRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the verifier to delete
	Id *VerifierID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteVerifierRequest) Reset() {
	*x = DeleteVerifierRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerifierRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerifierRequest) ProtoMessage() {}

func (x *DeleteVerifierRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerifierRequest.ProtoReflect.Descriptor instead.
func (*DeleteVerifierRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteVerifierRequest) GetId() *VerifierID {
	if x != nil {
		return x.Id
	}
	return nil
}

// Response message for `DeleteVerifier`
type DeleteVerifierResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteVerifierResponse) Reset() {
	*x = DeleteVerifierResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerifierResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerifierResponse) ProtoMessage() {}

func (x *DeleteVerifierResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerifierResponse.ProtoReflect.Descriptor instead.
func (*DeleteVerifierResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{9}
}

// Request message for `AddTag`
type AddVerifierTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Verifier to add a tag to.
	VerifierId *VerifierID `protobuf:"bytes,1,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	// The codes of the tag to add.
	TagCodes []*TagCode `protobuf:"bytes,2,rep,name=tag_codes,json=tagCodes,proto3" json:"tag_codes,omitempty"`
}

func (x *AddVerifierTagsRequest) Reset() {
	*x = AddVerifierTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVerifierTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVerifierTagsRequest) ProtoMessage() {}

func (x *AddVerifierTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVerifierTagsRequest.ProtoReflect.Descriptor instead.
func (*AddVerifierTagsRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{10}
}

func (x *AddVerifierTagsRequest) GetVerifierId() *VerifierID {
	if x != nil {
		return x.VerifierId
	}
	return nil
}

func (x *AddVerifierTagsRequest) GetTagCodes() []*TagCode {
	if x != nil {
		return x.TagCodes
	}
	return nil
}

// Response message for `AddTag`
type AddVerifierTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the verifier to add a tag to.
	VerifierId *VerifierID `protobuf:"bytes,1,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	// The codes of the tags added.
	TagCodes []*TagCode `protobuf:"bytes,2,rep,name=tag_codes,json=tagCodes,proto3" json:"tag_codes,omitempty"`
}

func (x *AddVerifierTagsResponse) Reset() {
	*x = AddVerifierTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddVerifierTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddVerifierTagsResponse) ProtoMessage() {}

func (x *AddVerifierTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddVerifierTagsResponse.ProtoReflect.Descriptor instead.
func (*AddVerifierTagsResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{11}
}

func (x *AddVerifierTagsResponse) GetVerifierId() *VerifierID {
	if x != nil {
		return x.VerifierId
	}
	return nil
}

func (x *AddVerifierTagsResponse) GetTagCodes() []*TagCode {
	if x != nil {
		return x.TagCodes
	}
	return nil
}

// Request message for `RemoveTags`
type DeleteVerifierTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Verifier to remove a tag from.
	VerifierId *VerifierID `protobuf:"bytes,1,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	// The codes of the tag to remove.
	TagCodes []*TagCode `protobuf:"bytes,2,rep,name=tag_codes,json=tagCodes,proto3" json:"tag_codes,omitempty"`
}

func (x *DeleteVerifierTagsRequest) Reset() {
	*x = DeleteVerifierTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerifierTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerifierTagsRequest) ProtoMessage() {}

func (x *DeleteVerifierTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerifierTagsRequest.ProtoReflect.Descriptor instead.
func (*DeleteVerifierTagsRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteVerifierTagsRequest) GetVerifierId() *VerifierID {
	if x != nil {
		return x.VerifierId
	}
	return nil
}

func (x *DeleteVerifierTagsRequest) GetTagCodes() []*TagCode {
	if x != nil {
		return x.TagCodes
	}
	return nil
}

// Response message for `RemoveTags`
type DeleteVerifierTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the verifier to remove a tag from.
	VerifierId *VerifierID `protobuf:"bytes,1,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	// The codes of the tags removed.
	TagCodes []*TagCode `protobuf:"bytes,2,rep,name=tag_codes,json=tagCodes,proto3" json:"tag_codes,omitempty"`
}

func (x *DeleteVerifierTagsResponse) Reset() {
	*x = DeleteVerifierTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteVerifierTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVerifierTagsResponse) ProtoMessage() {}

func (x *DeleteVerifierTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVerifierTagsResponse.ProtoReflect.Descriptor instead.
func (*DeleteVerifierTagsResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteVerifierTagsResponse) GetVerifierId() *VerifierID {
	if x != nil {
		return x.VerifierId
	}
	return nil
}

func (x *DeleteVerifierTagsResponse) GetTagCodes() []*TagCode {
	if x != nil {
		return x.TagCodes
	}
	return nil
}

// Request message for `ListTags`
type ListVerifierTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Verifier to list tags for.
	VerifierId *VerifierID `protobuf:"bytes,1,opt,name=verifier_id,json=verifierId,proto3" json:"verifier_id,omitempty"`
	// Creation timestamp after which to query.
	BeforeTimestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before_timestamp,json=beforeTimestamp,proto3,oneof" json:"before_timestamp,omitempty"`
	// The maximum number of products to return
	PageSize *int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`
}

func (x *ListVerifierTagsRequest) Reset() {
	*x = ListVerifierTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifierTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifierTagsRequest) ProtoMessage() {}

func (x *ListVerifierTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifierTagsRequest.ProtoReflect.Descriptor instead.
func (*ListVerifierTagsRequest) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{14}
}

func (x *ListVerifierTagsRequest) GetVerifierId() *VerifierID {
	if x != nil {
		return x.VerifierId
	}
	return nil
}

func (x *ListVerifierTagsRequest) GetBeforeTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.BeforeTimestamp
	}
	return nil
}

func (x *ListVerifierTagsRequest) GetPageSize() int32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

// Response message for `ListTags`
type ListVerifierTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tags
	TagCodes []*TagCode `protobuf:"bytes,1,rep,name=tag_codes,json=tagCodes,proto3" json:"tag_codes,omitempty"`
}

func (x *ListVerifierTagsResponse) Reset() {
	*x = ListVerifierTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListVerifierTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVerifierTagsResponse) ProtoMessage() {}

func (x *ListVerifierTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVerifierTagsResponse.ProtoReflect.Descriptor instead.
func (*ListVerifierTagsResponse) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{15}
}

func (x *ListVerifierTagsResponse) GetTagCodes() []*TagCode {
	if x != nil {
		return x.TagCodes
	}
	return nil
}

// A message representing a verifier identifier.
type VerifierID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifier identifier
	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *VerifierID) Reset() {
	*x = VerifierID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifierID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifierID) ProtoMessage() {}

func (x *VerifierID) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifierID.ProtoReflect.Descriptor instead.
func (*VerifierID) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{16}
}

func (x *VerifierID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// a message representing a verifier
type Verifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The verifier identifier
	Id *VerifierID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The verifier display name
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The creation timestamp
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *Verifier) Reset() {
	*x = Verifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_verify_v1_verifiers_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Verifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Verifier) ProtoMessage() {}

func (x *Verifier) ProtoReflect() protoreflect.Message {
	mi := &file_tap_verify_v1_verifiers_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Verifier.ProtoReflect.Descriptor instead.
func (*Verifier) Descriptor() ([]byte, []int) {
	return file_tap_verify_v1_verifiers_proto_rawDescGZIP(), []int{17}
}

func (x *Verifier) GetId() *VerifierID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Verifier) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Verifier) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Verifier) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

var File_tap_verify_v1_verifiers_proto protoreflect.FileDescriptor

var file_tap_verify_v1_verifiers_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x74, 0x61, 0x70, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x74, 0x61,
	0x70, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x67, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xe0, 0x01, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x4a, 0x0a,
	0x10, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0x4e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x09, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22,
	0x47, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48,
	0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x33, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x26, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x16, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x15, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x91, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33,
	0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x74, 0x61, 0x67, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x17, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x52,
	0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x74,
	0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x94, 0x01, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x74,
	0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x52, 0x0a, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x74,
	0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xee, 0x01, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x49, 0x44, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0a, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x10, 0x62, 0x65, 0x66, 0x6f, 0x72,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x0f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4f, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x74, 0x61, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x0a, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72, 0x03, 0xb0, 0x01, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd2, 0x01, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x93, 0x06, 0x0a,
	0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x73, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x74,
	0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x60, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x63, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x26, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x12, 0x28, 0x2e,
	0x74, 0x61, 0x70, 0x2e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x72, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0xbb, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x40, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x61, 0x6c, 0x2d, 0x65, 0x76, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c,
	0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x61, 0x70, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54,
	0x56, 0x58, 0xaa, 0x02, 0x0d, 0x54, 0x61, 0x70, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x0d, 0x54, 0x61, 0x70, 0x5c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5c,
	0x56, 0x31, 0xe2, 0x02, 0x19, 0x54, 0x61, 0x70, 0x5c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x0f, 0x54, 0x61, 0x70, 0x3a, 0x3a, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tap_verify_v1_verifiers_proto_rawDescOnce sync.Once
	file_tap_verify_v1_verifiers_proto_rawDescData = file_tap_verify_v1_verifiers_proto_rawDesc
)

func file_tap_verify_v1_verifiers_proto_rawDescGZIP() []byte {
	file_tap_verify_v1_verifiers_proto_rawDescOnce.Do(func() {
		file_tap_verify_v1_verifiers_proto_rawDescData = protoimpl.X.CompressGZIP(file_tap_verify_v1_verifiers_proto_rawDescData)
	})
	return file_tap_verify_v1_verifiers_proto_rawDescData
}

var file_tap_verify_v1_verifiers_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_tap_verify_v1_verifiers_proto_goTypes = []interface{}{
	(*CreateVerifierRequest)(nil),      // 0: tap.verify.v1.CreateVerifierRequest
	(*CreateVerifierResponse)(nil),     // 1: tap.verify.v1.CreateVerifierResponse
	(*ListVerifiersRequest)(nil),       // 2: tap.verify.v1.ListVerifiersRequest
	(*ListVerifiersResponse)(nil),      // 3: tap.verify.v1.ListVerifiersResponse
	(*GetVerifierRequest)(nil),         // 4: tap.verify.v1.GetVerifierRequest
	(*GetVerifierResponse)(nil),        // 5: tap.verify.v1.GetVerifierResponse
	(*UpdateVerifierRequest)(nil),      // 6: tap.verify.v1.UpdateVerifierRequest
	(*UpdateVerifierResponse)(nil),     // 7: tap.verify.v1.UpdateVerifierResponse
	(*DeleteVerifierRequest)(nil),      // 8: tap.verify.v1.DeleteVerifierRequest
	(*DeleteVerifierResponse)(nil),     // 9: tap.verify.v1.DeleteVerifierResponse
	(*AddVerifierTagsRequest)(nil),     // 10: tap.verify.v1.AddVerifierTagsRequest
	(*AddVerifierTagsResponse)(nil),    // 11: tap.verify.v1.AddVerifierTagsResponse
	(*DeleteVerifierTagsRequest)(nil),  // 12: tap.verify.v1.DeleteVerifierTagsRequest
	(*DeleteVerifierTagsResponse)(nil), // 13: tap.verify.v1.DeleteVerifierTagsResponse
	(*ListVerifierTagsRequest)(nil),    // 14: tap.verify.v1.ListVerifierTagsRequest
	(*ListVerifierTagsResponse)(nil),   // 15: tap.verify.v1.ListVerifierTagsResponse
	(*VerifierID)(nil),                 // 16: tap.verify.v1.VerifierID
	(*Verifier)(nil),                   // 17: tap.verify.v1.Verifier
	(*timestamppb.Timestamp)(nil),      // 18: google.protobuf.Timestamp
	(*TagCode)(nil),                    // 19: tap.verify.v1.TagCode
}
var file_tap_verify_v1_verifiers_proto_depIdxs = []int32{
	16, // 0: tap.verify.v1.CreateVerifierRequest.id:type_name -> tap.verify.v1.VerifierID
	17, // 1: tap.verify.v1.CreateVerifierResponse.verifier:type_name -> tap.verify.v1.Verifier
	18, // 2: tap.verify.v1.ListVerifiersRequest.before_timestamp:type_name -> google.protobuf.Timestamp
	17, // 3: tap.verify.v1.ListVerifiersResponse.verifiers:type_name -> tap.verify.v1.Verifier
	16, // 4: tap.verify.v1.GetVerifierRequest.id:type_name -> tap.verify.v1.VerifierID
	17, // 5: tap.verify.v1.GetVerifierResponse.verifier:type_name -> tap.verify.v1.Verifier
	16, // 6: tap.verify.v1.UpdateVerifierRequest.id:type_name -> tap.verify.v1.VerifierID
	17, // 7: tap.verify.v1.UpdateVerifierResponse.verifier:type_name -> tap.verify.v1.Verifier
	16, // 8: tap.verify.v1.DeleteVerifierRequest.id:type_name -> tap.verify.v1.VerifierID
	16, // 9: tap.verify.v1.AddVerifierTagsRequest.verifier_id:type_name -> tap.verify.v1.VerifierID
	19, // 10: tap.verify.v1.AddVerifierTagsRequest.tag_codes:type_name -> tap.verify.v1.TagCode
	16, // 11: tap.verify.v1.AddVerifierTagsResponse.verifier_id:type_name -> tap.verify.v1.VerifierID
	19, // 12: tap.verify.v1.AddVerifierTagsResponse.tag_codes:type_name -> tap.verify.v1.TagCode
	16, // 13: tap.verify.v1.DeleteVerifierTagsRequest.verifier_id:type_name -> tap.verify.v1.VerifierID
	19, // 14: tap.verify.v1.DeleteVerifierTagsRequest.tag_codes:type_name -> tap.verify.v1.TagCode
	16, // 15: tap.verify.v1.DeleteVerifierTagsResponse.verifier_id:type_name -> tap.verify.v1.VerifierID
	19, // 16: tap.verify.v1.DeleteVerifierTagsResponse.tag_codes:type_name -> tap.verify.v1.TagCode
	16, // 17: tap.verify.v1.ListVerifierTagsRequest.verifier_id:type_name -> tap.verify.v1.VerifierID
	18, // 18: tap.verify.v1.ListVerifierTagsRequest.before_timestamp:type_name -> google.protobuf.Timestamp
	19, // 19: tap.verify.v1.ListVerifierTagsResponse.tag_codes:type_name -> tap.verify.v1.TagCode
	16, // 20: tap.verify.v1.Verifier.id:type_name -> tap.verify.v1.VerifierID
	18, // 21: tap.verify.v1.Verifier.create_time:type_name -> google.protobuf.Timestamp
	18, // 22: tap.verify.v1.Verifier.update_time:type_name -> google.protobuf.Timestamp
	2,  // 23: tap.verify.v1.VerifiersService.ListVerifiers:input_type -> tap.verify.v1.ListVerifiersRequest
	4,  // 24: tap.verify.v1.VerifiersService.GetVerifier:input_type -> tap.verify.v1.GetVerifierRequest
	0,  // 25: tap.verify.v1.VerifiersService.CreateVerifier:input_type -> tap.verify.v1.CreateVerifierRequest
	6,  // 26: tap.verify.v1.VerifiersService.UpdateVerifier:input_type -> tap.verify.v1.UpdateVerifierRequest
	8,  // 27: tap.verify.v1.VerifiersService.DeleteVerifier:input_type -> tap.verify.v1.DeleteVerifierRequest
	10, // 28: tap.verify.v1.VerifiersService.AddVerifierTags:input_type -> tap.verify.v1.AddVerifierTagsRequest
	14, // 29: tap.verify.v1.VerifiersService.ListVerifierTags:input_type -> tap.verify.v1.ListVerifierTagsRequest
	12, // 30: tap.verify.v1.VerifiersService.DeleteVerifierTags:input_type -> tap.verify.v1.DeleteVerifierTagsRequest
	3,  // 31: tap.verify.v1.VerifiersService.ListVerifiers:output_type -> tap.verify.v1.ListVerifiersResponse
	5,  // 32: tap.verify.v1.VerifiersService.GetVerifier:output_type -> tap.verify.v1.GetVerifierResponse
	1,  // 33: tap.verify.v1.VerifiersService.CreateVerifier:output_type -> tap.verify.v1.CreateVerifierResponse
	7,  // 34: tap.verify.v1.VerifiersService.UpdateVerifier:output_type -> tap.verify.v1.UpdateVerifierResponse
	9,  // 35: tap.verify.v1.VerifiersService.DeleteVerifier:output_type -> tap.verify.v1.DeleteVerifierResponse
	11, // 36: tap.verify.v1.VerifiersService.AddVerifierTags:output_type -> tap.verify.v1.AddVerifierTagsResponse
	15, // 37: tap.verify.v1.VerifiersService.ListVerifierTags:output_type -> tap.verify.v1.ListVerifierTagsResponse
	13, // 38: tap.verify.v1.VerifiersService.DeleteVerifierTags:output_type -> tap.verify.v1.DeleteVerifierTagsResponse
	31, // [31:39] is the sub-list for method output_type
	23, // [23:31] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_tap_verify_v1_verifiers_proto_init() }
func file_tap_verify_v1_verifiers_proto_init() {
	if File_tap_verify_v1_verifiers_proto != nil {
		return
	}
	file_tap_verify_v1_tags_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tap_verify_v1_verifiers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVerifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifiersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifiersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVerifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVerifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerifierRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerifierResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVerifierTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddVerifierTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerifierTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteVerifierTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifierTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListVerifierTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifierID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_verify_v1_verifiers_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Verifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tap_verify_v1_verifiers_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_tap_verify_v1_verifiers_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_tap_verify_v1_verifiers_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tap_verify_v1_verifiers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tap_verify_v1_verifiers_proto_goTypes,
		DependencyIndexes: file_tap_verify_v1_verifiers_proto_depIdxs,
		MessageInfos:      file_tap_verify_v1_verifiers_proto_msgTypes,
	}.Build()
	File_tap_verify_v1_verifiers_proto = out.File
	file_tap_verify_v1_verifiers_proto_rawDesc = nil
	file_tap_verify_v1_verifiers_proto_goTypes = nil
	file_tap_verify_v1_verifiers_proto_depIdxs = nil
}
