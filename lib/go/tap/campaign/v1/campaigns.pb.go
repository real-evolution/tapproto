// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: tap/campaign/v1/campaigns.proto

package campaignv1

import (
	v11 "github.com/real-evolution/tapproto/lib/go/tap/points/v1"
	v1 "github.com/real-evolution/tapproto/lib/go/tap/types/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CampaignState int32

const (
	CampaignState_CAMPAIGN_STATE_UNSPECIFIED CampaignState = 0
	CampaignState_CAMPAIGN_STATE_APPROVING   CampaignState = 1
	CampaignState_CAMPAIGN_STATE_APPROVED    CampaignState = 2
	CampaignState_CAMPAIGN_STATE_REJECTED    CampaignState = 3
	CampaignState_CAMPAIGN_STATE_RUNNING     CampaignState = 4
	CampaignState_CAMPAIGN_STATE_PAUSED      CampaignState = 5
	CampaignState_CAMPAIGN_STATE_CANCELED    CampaignState = 6
	CampaignState_CAMPAIGN_STATE_ENDED       CampaignState = 7
)

// Enum value maps for CampaignState.
var (
	CampaignState_name = map[int32]string{
		0: "CAMPAIGN_STATE_UNSPECIFIED",
		1: "CAMPAIGN_STATE_APPROVING",
		2: "CAMPAIGN_STATE_APPROVED",
		3: "CAMPAIGN_STATE_REJECTED",
		4: "CAMPAIGN_STATE_RUNNING",
		5: "CAMPAIGN_STATE_PAUSED",
		6: "CAMPAIGN_STATE_CANCELED",
		7: "CAMPAIGN_STATE_ENDED",
	}
	CampaignState_value = map[string]int32{
		"CAMPAIGN_STATE_UNSPECIFIED": 0,
		"CAMPAIGN_STATE_APPROVING":   1,
		"CAMPAIGN_STATE_APPROVED":    2,
		"CAMPAIGN_STATE_REJECTED":    3,
		"CAMPAIGN_STATE_RUNNING":     4,
		"CAMPAIGN_STATE_PAUSED":      5,
		"CAMPAIGN_STATE_CANCELED":    6,
		"CAMPAIGN_STATE_ENDED":       7,
	}
)

func (x CampaignState) Enum() *CampaignState {
	p := new(CampaignState)
	*p = x
	return p
}

func (x CampaignState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CampaignState) Descriptor() protoreflect.EnumDescriptor {
	return file_tap_campaign_v1_campaigns_proto_enumTypes[0].Descriptor()
}

func (CampaignState) Type() protoreflect.EnumType {
	return &file_tap_campaign_v1_campaigns_proto_enumTypes[0]
}

func (x CampaignState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CampaignState.Descriptor instead.
func (CampaignState) EnumDescriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{0}
}

type SetCampaignStateRequest_StateTransition int32

const (
	SetCampaignStateRequest_STATE_TRANSITION_UNSPECIFIED SetCampaignStateRequest_StateTransition = 0
	SetCampaignStateRequest_STATE_TRANSITION_APPROVE     SetCampaignStateRequest_StateTransition = 1
	SetCampaignStateRequest_STATE_TRANSITION_REJECT      SetCampaignStateRequest_StateTransition = 2
	SetCampaignStateRequest_STATE_TRANSITION_RUN         SetCampaignStateRequest_StateTransition = 3
	SetCampaignStateRequest_STATE_TRANSITION_PAUSE       SetCampaignStateRequest_StateTransition = 4
	SetCampaignStateRequest_STATE_TRANSITION_CANCEL      SetCampaignStateRequest_StateTransition = 5
	SetCampaignStateRequest_STATE_TRANSITION_END         SetCampaignStateRequest_StateTransition = 6
)

// Enum value maps for SetCampaignStateRequest_StateTransition.
var (
	SetCampaignStateRequest_StateTransition_name = map[int32]string{
		0: "STATE_TRANSITION_UNSPECIFIED",
		1: "STATE_TRANSITION_APPROVE",
		2: "STATE_TRANSITION_REJECT",
		3: "STATE_TRANSITION_RUN",
		4: "STATE_TRANSITION_PAUSE",
		5: "STATE_TRANSITION_CANCEL",
		6: "STATE_TRANSITION_END",
	}
	SetCampaignStateRequest_StateTransition_value = map[string]int32{
		"STATE_TRANSITION_UNSPECIFIED": 0,
		"STATE_TRANSITION_APPROVE":     1,
		"STATE_TRANSITION_REJECT":      2,
		"STATE_TRANSITION_RUN":         3,
		"STATE_TRANSITION_PAUSE":       4,
		"STATE_TRANSITION_CANCEL":      5,
		"STATE_TRANSITION_END":         6,
	}
)

func (x SetCampaignStateRequest_StateTransition) Enum() *SetCampaignStateRequest_StateTransition {
	p := new(SetCampaignStateRequest_StateTransition)
	*p = x
	return p
}

func (x SetCampaignStateRequest_StateTransition) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetCampaignStateRequest_StateTransition) Descriptor() protoreflect.EnumDescriptor {
	return file_tap_campaign_v1_campaigns_proto_enumTypes[1].Descriptor()
}

func (SetCampaignStateRequest_StateTransition) Type() protoreflect.EnumType {
	return &file_tap_campaign_v1_campaigns_proto_enumTypes[1]
}

func (x SetCampaignStateRequest_StateTransition) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SetCampaignStateRequest_StateTransition.Descriptor instead.
func (SetCampaignStateRequest_StateTransition) EnumDescriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{6, 0}
}

type ListCampaignsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State        *CampaignState `protobuf:"varint,1,opt,name=state,proto3,enum=tap.campaign.v1.CampaignState,oneof" json:"state,omitempty"`
	PackageId    *PackageID     `protobuf:"bytes,2,opt,name=package_id,json=packageId,proto3,oneof" json:"package_id,omitempty"`
	ProviderId   *string        `protobuf:"bytes,3,opt,name=provider_id,json=providerId,proto3,oneof" json:"provider_id,omitempty"`
	AdvertiserId *string        `protobuf:"bytes,4,opt,name=advertiser_id,json=advertiserId,proto3,oneof" json:"advertiser_id,omitempty"`
	Page         *v1.Page       `protobuf:"bytes,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCampaignsRequest) Reset() {
	*x = ListCampaignsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsRequest) ProtoMessage() {}

func (x *ListCampaignsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsRequest.ProtoReflect.Descriptor instead.
func (*ListCampaignsRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{0}
}

func (x *ListCampaignsRequest) GetState() CampaignState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return CampaignState_CAMPAIGN_STATE_UNSPECIFIED
}

func (x *ListCampaignsRequest) GetPackageId() *PackageID {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *ListCampaignsRequest) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *ListCampaignsRequest) GetAdvertiserId() string {
	if x != nil && x.AdvertiserId != nil {
		return *x.AdvertiserId
	}
	return ""
}

func (x *ListCampaignsRequest) GetPage() *v1.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListCampaignsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*Campaign `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor []byte      `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3,oneof" json:"next_cursor,omitempty"`
}

func (x *ListCampaignsResponse) Reset() {
	*x = ListCampaignsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignsResponse) ProtoMessage() {}

func (x *ListCampaignsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignsResponse.ProtoReflect.Descriptor instead.
func (*ListCampaignsResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{1}
}

func (x *ListCampaignsResponse) GetItems() []*Campaign {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListCampaignsResponse) GetNextCursor() []byte {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

type GetCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *CampaignID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCampaignRequest) Reset() {
	*x = GetCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignRequest) ProtoMessage() {}

func (x *GetCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignRequest.ProtoReflect.Descriptor instead.
func (*GetCampaignRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{2}
}

func (x *GetCampaignRequest) GetId() *CampaignID {
	if x != nil {
		return x.Id
	}
	return nil
}

type GetCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *GetCampaignResponse) Reset() {
	*x = GetCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCampaignResponse) ProtoMessage() {}

func (x *GetCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCampaignResponse.ProtoReflect.Descriptor instead.
func (*GetCampaignResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{3}
}

func (x *GetCampaignResponse) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type CreateCampaignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *string         `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	PackageId   *PackageID      `protobuf:"bytes,3,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	AdsIds      []string        `protobuf:"bytes,4,rep,name=ads_ids,json=adsIds,proto3" json:"ads_ids,omitempty"`
	TransferId  *v11.TransferID `protobuf:"bytes,5,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *CreateCampaignRequest) Reset() {
	*x = CreateCampaignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignRequest) ProtoMessage() {}

func (x *CreateCampaignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignRequest.ProtoReflect.Descriptor instead.
func (*CreateCampaignRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCampaignRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateCampaignRequest) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateCampaignRequest) GetPackageId() *PackageID {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *CreateCampaignRequest) GetAdsIds() []string {
	if x != nil {
		return x.AdsIds
	}
	return nil
}

func (x *CreateCampaignRequest) GetTransferId() *v11.TransferID {
	if x != nil {
		return x.TransferId
	}
	return nil
}

type CreateCampaignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *CreateCampaignResponse) Reset() {
	*x = CreateCampaignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCampaignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCampaignResponse) ProtoMessage() {}

func (x *CreateCampaignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCampaignResponse.ProtoReflect.Descriptor instead.
func (*CreateCampaignResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCampaignResponse) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type SetCampaignStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *CampaignID                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Transition SetCampaignStateRequest_StateTransition `protobuf:"varint,2,opt,name=transition,proto3,enum=tap.campaign.v1.SetCampaignStateRequest_StateTransition" json:"transition,omitempty"`
}

func (x *SetCampaignStateRequest) Reset() {
	*x = SetCampaignStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCampaignStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCampaignStateRequest) ProtoMessage() {}

func (x *SetCampaignStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCampaignStateRequest.ProtoReflect.Descriptor instead.
func (*SetCampaignStateRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{6}
}

func (x *SetCampaignStateRequest) GetId() *CampaignID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SetCampaignStateRequest) GetTransition() SetCampaignStateRequest_StateTransition {
	if x != nil {
		return x.Transition
	}
	return SetCampaignStateRequest_STATE_TRANSITION_UNSPECIFIED
}

type SetCampaignStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Campaign *Campaign `protobuf:"bytes,1,opt,name=campaign,proto3" json:"campaign,omitempty"`
}

func (x *SetCampaignStateResponse) Reset() {
	*x = SetCampaignStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCampaignStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCampaignStateResponse) ProtoMessage() {}

func (x *SetCampaignStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCampaignStateResponse.ProtoReflect.Descriptor instead.
func (*SetCampaignStateResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{7}
}

func (x *SetCampaignStateResponse) GetCampaign() *Campaign {
	if x != nil {
		return x.Campaign
	}
	return nil
}

type PickAdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PickAdRequest) Reset() {
	*x = PickAdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickAdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAdRequest) ProtoMessage() {}

func (x *PickAdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAdRequest.ProtoReflect.Descriptor instead.
func (*PickAdRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{8}
}

type PickAdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId *CampaignID `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	AdId       string      `protobuf:"bytes,2,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
}

func (x *PickAdResponse) Reset() {
	*x = PickAdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickAdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickAdResponse) ProtoMessage() {}

func (x *PickAdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickAdResponse.ProtoReflect.Descriptor instead.
func (*PickAdResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{9}
}

func (x *PickAdResponse) GetCampaignId() *CampaignID {
	if x != nil {
		return x.CampaignId
	}
	return nil
}

func (x *PickAdResponse) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

type ListCampaignViewsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderId   *string     `protobuf:"bytes,1,opt,name=provider_id,json=providerId,proto3,oneof" json:"provider_id,omitempty"`
	AdvertiserId *string     `protobuf:"bytes,2,opt,name=advertiser_id,json=advertiserId,proto3,oneof" json:"advertiser_id,omitempty"`
	CampaignId   *CampaignID `protobuf:"bytes,3,opt,name=campaign_id,json=campaignId,proto3,oneof" json:"campaign_id,omitempty"`
	AdId         *string     `protobuf:"bytes,4,opt,name=ad_id,json=adId,proto3,oneof" json:"ad_id,omitempty"`
	SubscriberId *string     `protobuf:"bytes,5,opt,name=subscriber_id,json=subscriberId,proto3,oneof" json:"subscriber_id,omitempty"`
	IsRewarded   *bool       `protobuf:"varint,6,opt,name=is_rewarded,json=isRewarded,proto3,oneof" json:"is_rewarded,omitempty"`
	Page         *v1.Page    `protobuf:"bytes,7,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListCampaignViewsRequest) Reset() {
	*x = ListCampaignViewsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignViewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignViewsRequest) ProtoMessage() {}

func (x *ListCampaignViewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignViewsRequest.ProtoReflect.Descriptor instead.
func (*ListCampaignViewsRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{10}
}

func (x *ListCampaignViewsRequest) GetProviderId() string {
	if x != nil && x.ProviderId != nil {
		return *x.ProviderId
	}
	return ""
}

func (x *ListCampaignViewsRequest) GetAdvertiserId() string {
	if x != nil && x.AdvertiserId != nil {
		return *x.AdvertiserId
	}
	return ""
}

func (x *ListCampaignViewsRequest) GetCampaignId() *CampaignID {
	if x != nil {
		return x.CampaignId
	}
	return nil
}

func (x *ListCampaignViewsRequest) GetAdId() string {
	if x != nil && x.AdId != nil {
		return *x.AdId
	}
	return ""
}

func (x *ListCampaignViewsRequest) GetSubscriberId() string {
	if x != nil && x.SubscriberId != nil {
		return *x.SubscriberId
	}
	return ""
}

func (x *ListCampaignViewsRequest) GetIsRewarded() bool {
	if x != nil && x.IsRewarded != nil {
		return *x.IsRewarded
	}
	return false
}

func (x *ListCampaignViewsRequest) GetPage() *v1.Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListCampaignViewsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*View `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor []byte  `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3,oneof" json:"next_cursor,omitempty"`
}

func (x *ListCampaignViewsResponse) Reset() {
	*x = ListCampaignViewsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCampaignViewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCampaignViewsResponse) ProtoMessage() {}

func (x *ListCampaignViewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCampaignViewsResponse.ProtoReflect.Descriptor instead.
func (*ListCampaignViewsResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{11}
}

func (x *ListCampaignViewsResponse) GetItems() []*View {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListCampaignViewsResponse) GetNextCursor() []byte {
	if x != nil {
		return x.NextCursor
	}
	return nil
}

type RegisterAdViewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CampaignId   *CampaignID          `protobuf:"bytes,1,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	AdId         string               `protobuf:"bytes,2,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	SubscriberId string               `protobuf:"bytes,3,opt,name=subscriber_id,json=subscriberId,proto3" json:"subscriber_id,omitempty"`
	Duration     *durationpb.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *RegisterAdViewRequest) Reset() {
	*x = RegisterAdViewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAdViewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAdViewRequest) ProtoMessage() {}

func (x *RegisterAdViewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAdViewRequest.ProtoReflect.Descriptor instead.
func (*RegisterAdViewRequest) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{12}
}

func (x *RegisterAdViewRequest) GetCampaignId() *CampaignID {
	if x != nil {
		return x.CampaignId
	}
	return nil
}

func (x *RegisterAdViewRequest) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *RegisterAdViewRequest) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *RegisterAdViewRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type RegisterAdViewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View *View `protobuf:"bytes,1,opt,name=view,proto3" json:"view,omitempty"`
}

func (x *RegisterAdViewResponse) Reset() {
	*x = RegisterAdViewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterAdViewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterAdViewResponse) ProtoMessage() {}

func (x *RegisterAdViewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterAdViewResponse.ProtoReflect.Descriptor instead.
func (*RegisterAdViewResponse) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{13}
}

func (x *RegisterAdViewResponse) GetView() *View {
	if x != nil {
		return x.View
	}
	return nil
}

type CampaignID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CampaignID) Reset() {
	*x = CampaignID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CampaignID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CampaignID) ProtoMessage() {}

func (x *CampaignID) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CampaignID.ProtoReflect.Descriptor instead.
func (*CampaignID) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{14}
}

func (x *CampaignID) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ViewID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ViewID) Reset() {
	*x = ViewID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ViewID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ViewID) ProtoMessage() {}

func (x *ViewID) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ViewID.ProtoReflect.Descriptor instead.
func (*ViewID) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{15}
}

func (x *ViewID) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Campaign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *CampaignID            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description  *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	State        CampaignState          `protobuf:"varint,4,opt,name=state,proto3,enum=tap.campaign.v1.CampaignState" json:"state,omitempty"`
	UnitsLeft    int32                  `protobuf:"varint,5,opt,name=units_left,json=unitsLeft,proto3" json:"units_left,omitempty"`
	TotalUnits   int32                  `protobuf:"varint,6,opt,name=total_units,json=totalUnits,proto3" json:"total_units,omitempty"`
	PackageId    *PackageID             `protobuf:"bytes,7,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
	AdvertiserId string                 `protobuf:"bytes,8,opt,name=advertiser_id,json=advertiserId,proto3" json:"advertiser_id,omitempty"`
	AdsIds       []string               `protobuf:"bytes,9,rep,name=ads_ids,json=adsIds,proto3" json:"ads_ids,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Campaign) Reset() {
	*x = Campaign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Campaign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Campaign) ProtoMessage() {}

func (x *Campaign) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Campaign.ProtoReflect.Descriptor instead.
func (*Campaign) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{16}
}

func (x *Campaign) GetId() *CampaignID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Campaign) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Campaign) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Campaign) GetState() CampaignState {
	if x != nil {
		return x.State
	}
	return CampaignState_CAMPAIGN_STATE_UNSPECIFIED
}

func (x *Campaign) GetUnitsLeft() int32 {
	if x != nil {
		return x.UnitsLeft
	}
	return 0
}

func (x *Campaign) GetTotalUnits() int32 {
	if x != nil {
		return x.TotalUnits
	}
	return 0
}

func (x *Campaign) GetPackageId() *PackageID {
	if x != nil {
		return x.PackageId
	}
	return nil
}

func (x *Campaign) GetAdvertiserId() string {
	if x != nil {
		return x.AdvertiserId
	}
	return ""
}

func (x *Campaign) GetAdsIds() []string {
	if x != nil {
		return x.AdsIds
	}
	return nil
}

func (x *Campaign) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Campaign) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type View struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           *ViewID                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Duration     *durationpb.Duration   `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Reward       *v1.Decimal            `protobuf:"bytes,3,opt,name=reward,proto3" json:"reward,omitempty"`
	CampaignId   *CampaignID            `protobuf:"bytes,4,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	AdId         string                 `protobuf:"bytes,5,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	SubscriberId string                 `protobuf:"bytes,6,opt,name=subscriber_id,json=subscriberId,proto3" json:"subscriber_id,omitempty"`
	TransferId   *int64                 `protobuf:"varint,7,opt,name=transfer_id,json=transferId,proto3,oneof" json:"transfer_id,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *View) Reset() {
	*x = View{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *View) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*View) ProtoMessage() {}

func (x *View) ProtoReflect() protoreflect.Message {
	mi := &file_tap_campaign_v1_campaigns_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use View.ProtoReflect.Descriptor instead.
func (*View) Descriptor() ([]byte, []int) {
	return file_tap_campaign_v1_campaigns_proto_rawDescGZIP(), []int{17}
}

func (x *View) GetId() *ViewID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *View) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *View) GetReward() *v1.Decimal {
	if x != nil {
		return x.Reward
	}
	return nil
}

func (x *View) GetCampaignId() *CampaignID {
	if x != nil {
		return x.CampaignId
	}
	return nil
}

func (x *View) GetAdId() string {
	if x != nil {
		return x.AdId
	}
	return ""
}

func (x *View) GetSubscriberId() string {
	if x != nil {
		return x.SubscriberId
	}
	return ""
}

func (x *View) GetTransferId() int64 {
	if x != nil && x.TransferId != nil {
		return *x.TransferId
	}
	return 0
}

func (x *View) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

var File_tap_campaign_v1_campaigns_proto protoreflect.FileDescriptor

var file_tap_campaign_v1_campaigns_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x61, 0x70, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0f, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e,
	0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x74, 0x61, 0x70, 0x2f, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x74, 0x61, 0x70, 0x2f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x74, 0x61, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d,
	0x74, 0x61, 0x70, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x02,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x44, 0x48, 0x01, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72,
	0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x24,
	0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x22, 0x41, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4c, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x22, 0xf4, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x73, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x73, 0x49, 0x64, 0x73,
	0x12, 0x3a, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x44,
	0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x22, 0xfe, 0x02,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xdb, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10,
	0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x03, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x10, 0x05, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x06, 0x22, 0x51,
	0x0a, 0x18, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74,
	0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x22, 0x0f, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x63, 0x0a, 0x0e, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x44, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x22, 0x9d, 0x03, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x49, 0x44, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x28, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x26, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x61, 0x64, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x22, 0x7e, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x24, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x49, 0x44, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12,
	0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x43, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65, 0x77, 0x52,
	0x04, 0x76, 0x69, 0x65, 0x77, 0x22, 0x22, 0x0a, 0x0a, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x06, 0x56, 0x69, 0x65,
	0x77, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe9, 0x03, 0x0a, 0x08, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x12, 0x34, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f,
	0x6c, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x4c, 0x65, 0x66, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x44, 0x52, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74, 0x69, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x76, 0x65, 0x72, 0x74,
	0x69, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x73, 0x49, 0x64, 0x73, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfe, 0x02, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x12, 0x27,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x65,
	0x77, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3c, 0x0a,
	0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x44, 0x52,
	0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x61,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x49, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x2a, 0xf5, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x41, 0x4d, 0x50,
	0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x41, 0x4d, 0x50,
	0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49,
	0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x1a, 0x0a, 0x16, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50,
	0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x41, 0x4d, 0x50, 0x41,
	0x49, 0x47, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x45, 0x44, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x41, 0x4d, 0x50, 0x41, 0x49, 0x47, 0x4e,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x07, 0x32, 0xb2,
	0x05, 0x0a, 0x10, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x61,
	0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x12, 0x23, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a,
	0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x12,
	0x26, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x67, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x06, 0x50, 0x69, 0x63,
	0x6b, 0x41, 0x64, 0x12, 0x1e, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x41, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70,
	0x61, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x12, 0x29, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x56, 0x69, 0x65, 0x77, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x61, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x56, 0x69,
	0x65, 0x77, 0x12, 0x26, 0x2e, 0x74, 0x61, 0x70, 0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x56,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x61, 0x70,
	0x2e, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x56, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0xc9, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x61, 0x70, 0x2e,
	0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x43, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x61, 0x6c, 0x2d, 0x65,
	0x76, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x61, 0x70, 0x2f, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67,
	0x6e, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x54, 0x43, 0x58, 0xaa, 0x02, 0x0f, 0x54, 0x61, 0x70, 0x2e,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x0f, 0x54, 0x61,
	0x70, 0x5c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1b,
	0x54, 0x61, 0x70, 0x5c, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x11, 0x54, 0x61,
	0x70, 0x3a, 0x3a, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tap_campaign_v1_campaigns_proto_rawDescOnce sync.Once
	file_tap_campaign_v1_campaigns_proto_rawDescData = file_tap_campaign_v1_campaigns_proto_rawDesc
)

func file_tap_campaign_v1_campaigns_proto_rawDescGZIP() []byte {
	file_tap_campaign_v1_campaigns_proto_rawDescOnce.Do(func() {
		file_tap_campaign_v1_campaigns_proto_rawDescData = protoimpl.X.CompressGZIP(file_tap_campaign_v1_campaigns_proto_rawDescData)
	})
	return file_tap_campaign_v1_campaigns_proto_rawDescData
}

var file_tap_campaign_v1_campaigns_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_tap_campaign_v1_campaigns_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_tap_campaign_v1_campaigns_proto_goTypes = []interface{}{
	(CampaignState)(0),                           // 0: tap.campaign.v1.CampaignState
	(SetCampaignStateRequest_StateTransition)(0), // 1: tap.campaign.v1.SetCampaignStateRequest.StateTransition
	(*ListCampaignsRequest)(nil),                 // 2: tap.campaign.v1.ListCampaignsRequest
	(*ListCampaignsResponse)(nil),                // 3: tap.campaign.v1.ListCampaignsResponse
	(*GetCampaignRequest)(nil),                   // 4: tap.campaign.v1.GetCampaignRequest
	(*GetCampaignResponse)(nil),                  // 5: tap.campaign.v1.GetCampaignResponse
	(*CreateCampaignRequest)(nil),                // 6: tap.campaign.v1.CreateCampaignRequest
	(*CreateCampaignResponse)(nil),               // 7: tap.campaign.v1.CreateCampaignResponse
	(*SetCampaignStateRequest)(nil),              // 8: tap.campaign.v1.SetCampaignStateRequest
	(*SetCampaignStateResponse)(nil),             // 9: tap.campaign.v1.SetCampaignStateResponse
	(*PickAdRequest)(nil),                        // 10: tap.campaign.v1.PickAdRequest
	(*PickAdResponse)(nil),                       // 11: tap.campaign.v1.PickAdResponse
	(*ListCampaignViewsRequest)(nil),             // 12: tap.campaign.v1.ListCampaignViewsRequest
	(*ListCampaignViewsResponse)(nil),            // 13: tap.campaign.v1.ListCampaignViewsResponse
	(*RegisterAdViewRequest)(nil),                // 14: tap.campaign.v1.RegisterAdViewRequest
	(*RegisterAdViewResponse)(nil),               // 15: tap.campaign.v1.RegisterAdViewResponse
	(*CampaignID)(nil),                           // 16: tap.campaign.v1.CampaignID
	(*ViewID)(nil),                               // 17: tap.campaign.v1.ViewID
	(*Campaign)(nil),                             // 18: tap.campaign.v1.Campaign
	(*View)(nil),                                 // 19: tap.campaign.v1.View
	(*PackageID)(nil),                            // 20: tap.campaign.v1.PackageID
	(*v1.Page)(nil),                              // 21: tap.types.v1.Page
	(*v11.TransferID)(nil),                       // 22: tap.points.v1.TransferID
	(*durationpb.Duration)(nil),                  // 23: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),                // 24: google.protobuf.Timestamp
	(*v1.Decimal)(nil),                           // 25: tap.types.v1.Decimal
}
var file_tap_campaign_v1_campaigns_proto_depIdxs = []int32{
	0,  // 0: tap.campaign.v1.ListCampaignsRequest.state:type_name -> tap.campaign.v1.CampaignState
	20, // 1: tap.campaign.v1.ListCampaignsRequest.package_id:type_name -> tap.campaign.v1.PackageID
	21, // 2: tap.campaign.v1.ListCampaignsRequest.page:type_name -> tap.types.v1.Page
	18, // 3: tap.campaign.v1.ListCampaignsResponse.items:type_name -> tap.campaign.v1.Campaign
	16, // 4: tap.campaign.v1.GetCampaignRequest.id:type_name -> tap.campaign.v1.CampaignID
	18, // 5: tap.campaign.v1.GetCampaignResponse.campaign:type_name -> tap.campaign.v1.Campaign
	20, // 6: tap.campaign.v1.CreateCampaignRequest.package_id:type_name -> tap.campaign.v1.PackageID
	22, // 7: tap.campaign.v1.CreateCampaignRequest.transfer_id:type_name -> tap.points.v1.TransferID
	18, // 8: tap.campaign.v1.CreateCampaignResponse.campaign:type_name -> tap.campaign.v1.Campaign
	16, // 9: tap.campaign.v1.SetCampaignStateRequest.id:type_name -> tap.campaign.v1.CampaignID
	1,  // 10: tap.campaign.v1.SetCampaignStateRequest.transition:type_name -> tap.campaign.v1.SetCampaignStateRequest.StateTransition
	18, // 11: tap.campaign.v1.SetCampaignStateResponse.campaign:type_name -> tap.campaign.v1.Campaign
	16, // 12: tap.campaign.v1.PickAdResponse.campaign_id:type_name -> tap.campaign.v1.CampaignID
	16, // 13: tap.campaign.v1.ListCampaignViewsRequest.campaign_id:type_name -> tap.campaign.v1.CampaignID
	21, // 14: tap.campaign.v1.ListCampaignViewsRequest.page:type_name -> tap.types.v1.Page
	19, // 15: tap.campaign.v1.ListCampaignViewsResponse.items:type_name -> tap.campaign.v1.View
	16, // 16: tap.campaign.v1.RegisterAdViewRequest.campaign_id:type_name -> tap.campaign.v1.CampaignID
	23, // 17: tap.campaign.v1.RegisterAdViewRequest.duration:type_name -> google.protobuf.Duration
	19, // 18: tap.campaign.v1.RegisterAdViewResponse.view:type_name -> tap.campaign.v1.View
	16, // 19: tap.campaign.v1.Campaign.id:type_name -> tap.campaign.v1.CampaignID
	0,  // 20: tap.campaign.v1.Campaign.state:type_name -> tap.campaign.v1.CampaignState
	20, // 21: tap.campaign.v1.Campaign.package_id:type_name -> tap.campaign.v1.PackageID
	24, // 22: tap.campaign.v1.Campaign.created_at:type_name -> google.protobuf.Timestamp
	24, // 23: tap.campaign.v1.Campaign.updated_at:type_name -> google.protobuf.Timestamp
	17, // 24: tap.campaign.v1.View.id:type_name -> tap.campaign.v1.ViewID
	23, // 25: tap.campaign.v1.View.duration:type_name -> google.protobuf.Duration
	25, // 26: tap.campaign.v1.View.reward:type_name -> tap.types.v1.Decimal
	16, // 27: tap.campaign.v1.View.campaign_id:type_name -> tap.campaign.v1.CampaignID
	24, // 28: tap.campaign.v1.View.created_at:type_name -> google.protobuf.Timestamp
	2,  // 29: tap.campaign.v1.CampaignsService.ListCampaigns:input_type -> tap.campaign.v1.ListCampaignsRequest
	4,  // 30: tap.campaign.v1.CampaignsService.GetCampaign:input_type -> tap.campaign.v1.GetCampaignRequest
	6,  // 31: tap.campaign.v1.CampaignsService.CreateCampaign:input_type -> tap.campaign.v1.CreateCampaignRequest
	8,  // 32: tap.campaign.v1.CampaignsService.SetCampaignState:input_type -> tap.campaign.v1.SetCampaignStateRequest
	10, // 33: tap.campaign.v1.CampaignsService.PickAd:input_type -> tap.campaign.v1.PickAdRequest
	12, // 34: tap.campaign.v1.CampaignsService.ListCampaignViews:input_type -> tap.campaign.v1.ListCampaignViewsRequest
	14, // 35: tap.campaign.v1.CampaignsService.RegisterAdView:input_type -> tap.campaign.v1.RegisterAdViewRequest
	3,  // 36: tap.campaign.v1.CampaignsService.ListCampaigns:output_type -> tap.campaign.v1.ListCampaignsResponse
	5,  // 37: tap.campaign.v1.CampaignsService.GetCampaign:output_type -> tap.campaign.v1.GetCampaignResponse
	7,  // 38: tap.campaign.v1.CampaignsService.CreateCampaign:output_type -> tap.campaign.v1.CreateCampaignResponse
	9,  // 39: tap.campaign.v1.CampaignsService.SetCampaignState:output_type -> tap.campaign.v1.SetCampaignStateResponse
	11, // 40: tap.campaign.v1.CampaignsService.PickAd:output_type -> tap.campaign.v1.PickAdResponse
	13, // 41: tap.campaign.v1.CampaignsService.ListCampaignViews:output_type -> tap.campaign.v1.ListCampaignViewsResponse
	15, // 42: tap.campaign.v1.CampaignsService.RegisterAdView:output_type -> tap.campaign.v1.RegisterAdViewResponse
	36, // [36:43] is the sub-list for method output_type
	29, // [29:36] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_tap_campaign_v1_campaigns_proto_init() }
func file_tap_campaign_v1_campaigns_proto_init() {
	if File_tap_campaign_v1_campaigns_proto != nil {
		return
	}
	file_tap_campaign_v1_packages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_tap_campaign_v1_campaigns_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCampaignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCampaignStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCampaignStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickAdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickAdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignViewsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCampaignViewsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAdViewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterAdViewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CampaignID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ViewID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Campaign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tap_campaign_v1_campaigns_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*View); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tap_campaign_v1_campaigns_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_tap_campaign_v1_campaigns_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tap_campaign_v1_campaigns_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tap_campaign_v1_campaigns_proto_goTypes,
		DependencyIndexes: file_tap_campaign_v1_campaigns_proto_depIdxs,
		EnumInfos:         file_tap_campaign_v1_campaigns_proto_enumTypes,
		MessageInfos:      file_tap_campaign_v1_campaigns_proto_msgTypes,
	}.Build()
	File_tap_campaign_v1_campaigns_proto = out.File
	file_tap_campaign_v1_campaigns_proto_rawDesc = nil
	file_tap_campaign_v1_campaigns_proto_goTypes = nil
	file_tap_campaign_v1_campaigns_proto_depIdxs = nil
}
